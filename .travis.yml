#
# The purpose of this file is to configure Travis CI build system integration.
#   @see https://travis-ci.com/SophistSolutions/WhyTheFuckIsMyNetworkSoSlow
#
# \note We use 'Release' configurations because they builds a bit faster than the 'Debug' configurations, and
#       we are limited with travis ci to a build that takes 50 minutes. We run out of time otherwise, and maybe
#       even to some degree with these settings. May need todo more to make this work.
#       Similarly, use --openssl use-system for speed of build.
#
# See https://travis-ci.com/SophistSolutions/WhyTheFuckIsMyNetworkSoSlow for builds/status
#
language: cpp

os: linux

## I tried this directly and it didn't help, but try again as instructions on
## https://docs.travis-ci.com/user/speeding-up-the-build/#parallelizing-your-build-on-one-virtual-machine
## suggested it.
env:
  global:
    - MAKEFLAGS="-j 4"

branches:
  only:
    - v1-Dev
    - v1-Release

jobs:
  allow_failures:
    - env:
        - MATRIX_EVAL="CC=clang CXX=clang++ MacOS=true" # https://stroika.atlassian.net/browse/STK-705 - retry mid december
    - env:
        - MATRIX_EVAL="Windows=true Is64Bit=true"

  include:
    #
    # Windows Configuration
    #
    - os: windows
      before_install:
        - systeminfo
        - travis_wait 45 docker pull sophistsolutionsinc/whythefuckismynetworksoslow-windows-cygwin-vs2k19
      install:
        # Not sure why, but this run appears to require EITHER --interactive or --tty, else it fails
        - "docker run
          --tty
          --detach --name buildContainer
          sophistsolutionsinc/whythefuckismynetworksoslow-windows-cygwin-vs2k19 || echo 'Failed: $?'"
        - docker exec buildContainer systeminfo
        - docker exec buildContainer sh -c "git clone https://github.com/SophistSolutions/WhyTheFuckIsMyNetworkSoSlow.git && cd WhyTheFuckIsMyNetworkSoSlow && git checkout $TRAVIS_COMMIT && git submodule update --recursive --init"
        - docker exec --workdir c:/WhyTheFuckIsMyNetworkSoSlow buildContainer make build-root
        # Only for build speed: --Xerces no --OpenSSL no --lzma no --boost no
        - docker exec --workdir c:/WhyTheFuckIsMyNetworkSoSlow/ThirdPartyComponents/Stroika/StroikaRoot buildContainer sh -c "./configure Release-U-64 --arch x86_64 --config-tag Windows --config-tag 64 --apply-default-release-flags  --Xerces no --OpenSSL no --lzma no --boost no"
        - docker exec --workdir c:/WhyTheFuckIsMyNetworkSoSlow buildContainer cat ConfigurationFiles/Release-U-64.xml
      script:
        #- docker exec --workdir c:/WhyTheFuckIsMyNetworkSoSlow --env MAKEFLAGS=$MAKEFLAGS buildContainer sh -c "make all"
        - docker exec --workdir c:/WhyTheFuckIsMyNetworkSoSlow/ThirdPartyComponents/Stroika/StroikaRoot --env MAKEFLAGS=$MAKEFLAGS buildContainer make libraries
        #- travis_wait 45 docker exec --workdir c:/WhyTheFuckIsMyNetworkSoSlow/ThirdPartyComponents/Stroika/StroikaRoot buildContainer make all
        - docker exec --workdir c:/WhyTheFuckIsMyNetworkSoSlow buildContainer make all
      after_failure:
        - echo "HANDLING FAILURE DUMPING DEBUG STUFF:"
      env:
        - MATRIX_EVAL="Windows=true Is64Bit=true"

    # MacOS Configuration (still not working as of 2020-01-01 - due to https://stroika.atlassian.net/browse/STK-705 but should be soon)
    - os: osx
      osx_image: xcode11.3
      addons:
        homebrew:
          packages:
            - gnu-sed
            - p7zip
      install:
        - git submodule update --init --recursive
        # -mmacosx-version-min=10.15 needed for https://stackoverflow.com/questions/56924853/why-xcode-11-beta-cant-use-c17s-filesystem-header
        - pushd ThirdPartyComponents/Stroika/StroikaRoot
        - ./ScriptsLib/MakeBuildRoot ../../../
        - ./configure Release --apply-default-release-flags --append-extra-compiler-and-linker-args -mmacosx-version-min=10.15
        - cat ConfigurationFiles/Release.xml
        - popd
      script:
        - clang++ --version
        - make all ECHO_BUILD_LINES=1
      env:
        - MATRIX_EVAL="CC=clang CXX=clang++ MacOS=true"

    # Linux (Ubuntu - 1804) Configuration - build all
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - libtool-bin
            - p7zip-full
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      install:
        - git submodule update --init --recursive
        - make build-root
        - (pushd ThirdPartyComponents/Stroika/StroikaRoot && ./configure Release --apply-default-release-flags)
        - (pushd ThirdPartyComponents/Stroika/StroikaRoot && cat ConfigurationFiles/Release.xml)
      script:
        - make all

before_install:
  - eval "${MATRIX_EVAL}"
