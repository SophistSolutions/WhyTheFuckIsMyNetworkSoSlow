add (if configuration) when writing Network objects- write its network fingerprint (and likewise for
network-interfaces))

---
sporadic spinning issue on hercules (1.0 CPU); build from github actions doe sthis (but maybe not immediately).
TEST build from my source code with logging on.

	(SO FAR CANNOT REPRODUCE - TRY BUILD FROM GITHUB ACTIONS AGAIN)
	(TEST MORE AND THEN CLOSE)
	(cannot reproduce when im loooking but still saw today
	it was after erorr )
				6 15:25:33 Hercules systemd[1]: Started Why the Fuck is My Network So Slow.
			Nov 16 15:28:03 Hercules WhyTheFuckIsMyNetworkSoSlow[3485389]: Database operation exception: Exception: Device or resource busy (lastsql 'UPDATE Devices SET name=NULL, _other_fields_=x'7b0a202020202261747461636865644e6574776f726b7322203a…')
			Nov 16 15:28:03 Hercules WhyTheFuckIsMyNetworkSoSlow[3485389]: Database update: ignoring exception in BackgroundDatabaseThread_ loop (will retry in 30 seconds): Exception: Device or resource busy
			Nov 16 15:28:05 Hercules WhyTheFuckIsMyNetworkSoSlow[3485389]: Database operation exception: Exception: Device or resource busy (lastsql 'INSERT INTO BLOB (contentType, blob, id) VALUES (NULL, x'89504e470d0a1a0a0000000d494844520000003000…')
			Nov 16 15:31:20 Hercules sy
	cannot get to happen again. MIGHT be issue caused by this error.
	Can use 2a vrsion to look at logs. BUt first use non-log version (sinc eonly ever saw with that).
	and use top -H to find the thread that is bsuy waiting.

---
	// USE CACHEABILIYT HEADERS ON RESULTS FROM WSAPI that are IMMUTABLE, SAYING THEY CNA BE CACHED (largely forever) - but maybe say 1 day).
	// so for snapshots that are old - they can be cahced long time. For snapshots that are actuively being updated, say not cachable or just a few seconds\
	THEN can probably GET RID OF idPersistable attribute, since can be inferred from cachablity header intead (just better way to say same thign)
	STILL need 'historicalSnapshot' cuz (bette rdocument) means its NOT a rollup (could have used noARollup as the name). Thoguh a little weird
	cuz in a ssense, everything is a rollup?? MAYBE dont need that flag either.

		PROBABLY DONT NEED EITHER FLAG - horizcatsnapshot - since equiv to == aggregatopns.isEmpty () and otheragg.isEmpty ();
		MAYBE need flag saying 'ID-PERSISTENT'. Since only then do you know its an ID you can save in a database (which corresponds
		to the historical guys pretty much)

		(done ENUF for now, and just do the change in logic so we dont need thos isHistorical flag - see if we can 
		access cache control header from html))
---
UI
       IN NEWTWORK DETAILS PAGE
               "Gateway (IP / Hardware)" probably should have Address appended to label (like External IP Address)


---
Show NetworkInterface information in GUI once we have fetch of the network interface objects working
(COULD DO BEFORE OR AFTER THE CACHE BY ID STUFF)
---

	IN HMTL, at least in GUI , show network interface objects - both rollups and snapshots

----

e59ab2d7-09aa-fa02-f030-0d973526dc8f
	{
		"UserSettings" : {
			"aggregateGatewayHardwareAddresses" : [
				"70:97:41:94:1a:00"
			],
			"name" : "Chania"
		}
	}
0f7d1c2e-3b14-07a0-e444-5b83f67debd7
	{
		"UserSettings" : {
			"aggregateGatewayHardwareAddresses" : [
				"e0:3f:49:e3:1c:a8"
			],
			"name" : "34 Church Street"
		}
	}
d4784d78-3bcc-5973-bb9f-3e3a7275d7d5
{
    "UserSettings" : {
        "aggregateFingerprints" : [
            "ae2c8b83-a5e9-30c3-f23b-cc147d82246a"
        ],
SB			"aggregateGatewayHardwareAddresses" : [
				"34:4d:ea:94:4a:94"
			],
        "name" : "Athens-Apartment-2022-10"
    }
}

----

	Once I restructure html code (maybe before) to separately fetch each network (and other object) by ID, I can 
	redo teh atttachedNetworks field of a device to be JUST the ID, not a mapping of ID to a few interesting key values.

----
>>> Review code cehcking in. I think its mostly OK. But verify I do a sensible job producing same answer incremntally as when starting up from scratch.
  And handling CONFLICTS in specs. Been a while - must consider.

	---
	from commandline - assure if I delete record from usersettings, it disappears from aggregated networks too immediately.and from database
	
	---
	ALSO - must debug why we get two copies of Sudbury network with the new code as well!

			... review in detail how rollup done. SOME of it cuz at least one record with no hardware address and some with hardware address
			of gateway.

			BUT ALSO - it appears we CAN get overlapping and random assignment between rollups, which isn't great.


			WORKING ON THIS - SEEMS ON SURFACE NOT A BUG. JUST SET userOverrides.aggregateFingerprints
				but thats not working rihgt, so debug

			thogh names make no sense, try adding to local windows server (and then delete)


airplane-greece2boston-2022-10-02



 curl -v -X PATCH --output - -H "Content-Type: application/json" -d '[{"op":"add","path":"/userOverrides/name","value":"airplane-greece2boston-2022-10-02"}]' http://localhost/api/v1/networks/340ceb50-e337-7669-4d5a-5c6f7a03dbb6

 issue is when we recompute we dont get the auto-add of the fingerprint rule. So new item created.


>>> maybe fix is to add 'temporary in ram' usersettings for these assocs? No. Cuz then on restart it fails.
>>> MAYBE ALL the fake fingerprint rules I cons up MUST be created through consed up user assoc rule? 
		... THINK GOING FOR THIS
		THEN - must have system POLICY about DELETING OLD UNINTERSTING objects from DB (those with no associated records, or just old rollups - or maybe save just the
		rollups as rollups - no longer disaggregatable).

		>>>>>>>>>>>>>>>***** ABOVE NEXT*******<<<<<<<<<<<<<<<<<<




hibernate on airplane, and wakeup PC at home, and confused about networks. Need to treat after wakeup
as new set of discovered devices/new session. (and net networks)


---
+ Create network through usersettings. Then delete it. Its creation causes add to startNetworks in rollup (on restart).
But the reset doesn't re-remove it, so it stays forever (til next app restart).

----
PATCH of 
curl -v -X PATCH --output - -H "Content-Type: application/json" -d '[{"op":"add","path":"/userOverrides/aggregateGatewayHardwareAddresses","value":["70:97:41:94:1a:00"]}]' http://localhost/api/v1/networks/e59ab2d7-09aa-fa02-f030-0d973526d
c8f
Or similar with bad path should raise error of some sort


340ceb50-e337-7669-4d5a-5c6f7a03dbb6


{
    "UserSettings" : {
        "aggregateGatewayHardwareAddresses" : [
            "00:e0:4b:22:96:d9"
        ],
        "name" : "airplane-greece2boston-2022-10-02"
    }
}

d4a16729-ba16-5c2f-6187-0925a2f7025d
{
    "UserSettings" : {
        "aggregateGatewayHardwareAddresses" : [
            "70:97:41:94:1a:00"
        ],
        "name" : "Chania"
    }
}




Rollup Code for Nets/Devices:

+ SET of user settings (stuff that could affect rollup) must re-rollup all networks/devices.
  for example, setting name ADDS name ( I THINK) - and setting rollup hardware address doesnt delete all the
  existing rollups, just affects future rollups.

	+	review code - using MergeIn_ for recompute all logic not sure right when we have conflict.

	++ Simplify data strucutres written to db, so one user settings table, but extra column for not user settings but remembered 
	settings, and can have one or other. OTHER is just the network fingerprint we sometimes use. DONT bother initializing data strucutres
	with those, but use them in the current guessid way with the current warnings about overlap.

	WAS:
				+ Lose ID-Cache tables in backend (recently added) -and just use the UserSettings tables for the same purpose (a field
					saying map thi common id /rollup helper id for networks and something an aggregates for 
					devices - or aggregates for both)

					This signifcantly cahnges/simplifes startup logic - must load all devices etc on startup.
					(UNSURE ABOUT THIS - MAYBE)

					THINK OUT CAREFULLY. WANT WHEN NETWORK GOES AWAY FOR THIS CACHE/MAP TO GO AWAY. DONT WANT ANY EMPTY rollup networks.
					ALSO - in some ways nice if user table only contains user specifiied data. But maybe still OK/simpler that way.

	++ AUTO EXTRACT STUFF LIKE NAMES FROM usersettings (add method to apply) - instaeda of manaully settig fNames.Add () in many
	places.

-- 
RETURN TO	
  https://github.com/SophistSolutions/WhyTheFuckIsMyNetworkSoSlow/issues/39 and finish (proabbly just UI side)
   then return to 
	https://github.com/SophistSolutions/WhyTheFuckIsMyNetworkSoSlow/milestone/2
----

kDeviceIDCacheTableSchema_

.. DO DBMgr DBAccess::Mgr class to do activate/dacitve
and create DB (and upgrade) directly there, and start backgorund thread for partst
that can run in background,but loading assocs https://github.com/SophistSolutions/WhyTheFuckIsMyNetworkSoSlow/issues/69
must be done syncrhonously at startup

===


 + Redo device fetching so we first just fetch device ids, and then fetch each device by id
   into separate caches. This has the advanage of getting alot of 304s, I hope. And then eventually
   switch to doing all the sorting server side (and filtering).

----



+ then fix SPEED issue with web service static content (at least measure and see if reasonable)
  (maybe in stk add flag saying READONLY and implement etags? maybe also support gzip
  with etags and sendfile special case?)
  But first - see what the problem is!
  Could have flag saying assumeFSReadOnly (for filesystem router) and then cache results
  accordingly.(memory mapped file read?)
+ fix make parallelel issue causes + make -j1 warning and slower build
  (seems just in building backend)

---
	Per-Device historical graphs that may make sense:

			> online
			X-Axis time-history, and y-axis constant height and green if yes, and red if no, and
		    white for unknown regions.

			@todo figure something better to display here for y-axis scale? Like a health measure or 
			inverse ping-time to that device?

			OR - maybe - when I can measure traffic to/from that device, height could be an estimate
			of that level of traffic (with 0 above x-axis so you can still see online but without traffic
			) 

			MAYBE START with just online-reachable (simple first graph idea) - and have option to add extra
			overlays (line chart showing traffic level), and line chart showing (some?which) ping times
			
----
https://apps.apple.com/us/app/pluto-hud/id1544577573?mt=12 

Hints about privacy policy

---

	>> NEXT WTF release do UI project to rewrite so view-store are 'slices' and maintian
	 lists instead of maps 
	   to better reflect ui ordering choices.

	   Do mapping from API-Model (keep wire model, api/business-model, and ui-model)
	   Keep all in vuex store, and have ui driven from ui-model
-----
confusing thing in Networks and Devices views:
	  click in opened selected box NOT treated as unclick close box - maybe have (x) box to close/collapse?
----
	devices, debugInfo, lastAdvertisement value is a STRING, but should be an OBJECT, so that 
	its better expandable in the GUI.
----

	> in HTML, replace Model and (Model/Utils helpers) with two models
	  Model.Wire
	  Model.API
	  with Model.Wire being what we currently have - the objects as the come from WSAPIServer
	  and Model.API being concrete classes with accessors that provide computed pretty stuff on top
	  and use that to replace stuff like GetName() etc... from those utils files.

	  John says Axios makes it easy to do this mapping; and even so should take a day
	  so leave it for a later GUI work pass

---
- Include the device ICON in its name field (prepend or append? prepend. Old Devices API shows those icons.
  OR - maybe use that in the device type field? Not sure. Maybe that makes more sense to show icon
  there? But add to existing icon? We can have  mutliple types so thats probably what makes the most sense.
  Its basically another 'type'.
---
	> Have quick connect icon on devices
	  popup for popular connect tecnhiques, like 
	    > http link (open port or presenation url)
		> RDP port invoke somehow rdp connection
		at least in details, but maybe at top level of list?
----

consider rule - if name contains MACBOOKPRO AND manufacture from ethernet info is Apple, then
mark it as type PC.

----
	sudo systemctl stop whythefuckismynetworksoslow.service 
		takes a long time (more than 10 seconds)
		whythefuckismynetworksoslow.service: Control process exited, code=exited, status=1/FAILURE
		Sep 02 10:13:34 Hercules systemd[1]: whythefuckismynetworksoslow.service: State 'stop-sigterm' timed out. Killing.
		Sep 02 10:13:34 Hercules systemd[1]: whythefuckismynetworksoslow.service: Killing process 924746 (WhyTheFuckIsMyN) with signal SIGKILL.
		Sep 02 10:13:34 Hercules systemd[1]: whythefuckismynetworksoslow.service: Killing process 924756 (RandomWalkThrou) with signal SIGKILL.
		Sep 02 10:13:34 Hercules systemd[1]: whythefuckismynetworksoslow.service: Main process exited, code=killed, status=9/KILL
		Sep 02 10:13:34 Hercules systemd[1]: whythefuckismynetworksoslow.service: Failed with result 'exit-code'.

---

	Switch to server side sorting before release (becaues it works better - smarter and easier to do smart there)

---
Guess more ports based on SSDP messages (urls in ssdp)

---

	Include self-reported icon (field) in the 'TYPES' list - at least for now.
	(maybe in name?)

---

https://linuxconfig.org/how-to-determine-os-of-the-remote-host

---

	Maybe - on OS guess - and TYPES - have CONFIDENCE (0..1)

----

	>>> Icon for MacOS

---

	Specail TYPE and ICON for LURKERS (devices on the network with no open
	ports - thinks like amazon echo?, cameras, etc. Not sure if/what they have
	open)

----

	> Have UI (and configuration knobs) to show scan rate(s), and allow configuring those rates, adn progress through scanning networks.

	> Maybe whole section on stats gathering and options

	>	CHeckboxes for features to turn on/off
	
----
make editable area a COMPONENT so and new SINGLE-DEVICE page (or change this page into that hiding list and focusing on single device)
then allow links to that single-device page
----
---

add CMD icons to devices page for 'scan more aggressively' 
and maybe have space for scan speed status.

----

do a 'quietConnect() version that doesnt throw - but returns flag on failure to connect)
(proably like C++ std c++ - overload taking a pointer to exception result to be filled in...
unique_ptr<exception> ())
[0011][0758.665]		<ConnectionOrientedStreamSocket_IMPL_::Connect (sockAddr=192.168.42.25:22, timeout=5 seconds)> {
[0013][0761.298]		ThreadPool::WaitForNextTask_ () pulled a new task from 'pending-tasks' to run on this thread, leaving pending-task-list-size = 0
[0013][0761.416]		<WSImpl::GetDevices_Recurse (sort={searchTerms: [ {by: Address, ascending: true, }, {by: Type, ascending: true, }, {by: Priority, ascending: true, } ], compareNetwork: '192.168.244.0/24', })> {
[0013][0761.439]		} </WSImpl::GetDevices_Recurse>
[0013][0761.508]		ThreadPool::WaitForNextTask_ () pulled a new task from 'pending-tasks' to run on this thread, leaving pending-task-list-size = 0
----

	> let run for a few days and try to connect with web browser.
	  I get no response
	  Service still running. Looking at tracelog I see lots of SSDP action running. 

	  AND STATIC website still serving content.

	GET of http://hercules.local:8080/ shows no activeity in tracelog but GET http://hercules.local shows lots of threadpool
	tasks being serviced.

	netstat shows lots of things connected/estabished on 8080


	See if I can reproduce on debugger on windows
		(((PROBABLY FIXED - SLOW MOSTLY DUE TO translate2localblob optiimziation lacking - but retest at home)))

----

make clean at top level of WTF (on UNIX) followed by make rebuilds parts of TPP/Stroika/TPP, so fix that!


----

	Use NAMES of networks in DEVICES panel
	Use right number of linked devices in networks panel
	Do LINKS between the two
	Do HOME PAGE that has at least a couple basic links.
	Could do ICONS for OS, and TYPES for devices (to look better)
	If name 'unknown' for device, fill in IP ADDRESS.

----

+ Fix default machine name - if "Unknown" - to be the IP-address (preferring v4 if available)

-----

> Fix breadcrumb code so links work in breadcrumbs

---


reexamine 
	BLOBMgr::AddBLOBFromURL (const URI& url)
	code in WTF - not that its buggy per-se but usage seems wrong. We seem to keepadding
	from webservice call - each time - and neverusing caching

	Maybe not all wrong - but debug why this is so slow.
	Maybe improve by using 
	CONNECTIONPPOOL (cuz we create new connection each time). And maybe
	depedning on TTL, avoid doing the CALL at all (make sure we avoid the call)
	in the connection layer, doiing the cachin, if the value has not is within the TTL.


----

Top priority bug:

curl -v http://hercules:8080/networks --output -
proiduces:

	HTTP/1.1 403 Forbidden
	< Access-Control-Allow-Origin: *
	< Connection: Keep-Alive
	< Content-Length: 113
	< Content-Type: text/plain; charset=UTF-8
	< Server: Why-The-Fuck-Is-My-Network-So-Slow/1.0
	<
	HTTP exception: status 403 (Forbidden) while sending 'GET' request to 'http://ip-api.com/json/108.49.240.210'.
	* Connection #0 to host hercules left intact
In some ways cool 403 from web request translated into 403 on our web server repsonse (double check true).
But this error should be logged (we need some sort of log facility where users can see log of activity - new WSAPI)
and this belongs to that log facility.

And belongs EATEN/suppressed in our web service response.

Similarly and perhaps related - we see no devices ever getting discovered!

NOTE - working fine on raspberrypi , just not on hercules.
-----


Use CircleCI command for build like I did for WTF – as code factoring

----

Do build for windows (as I got working on stroika) wtih circleci/travisci



-----

>	with next stroika release, can get proper interfface id for each definve found iwth ARP-getneigbobors ,
   so use that on the discovered devie (and record this at least in debug info so we know device found by aprping
   ) and also restrict what network intefaces we've found the device on.


----
>>> Windows build fairly broken on virtualbox test vm
	 (seems to only report a single device - but keeps changing which  - so array messed up - very weird)


-----

> Next main task is new UI I have sketched out

-----

> use this to add stroika bloom filter class and
use to check what machines we tried/found missing

https://llimllib.github.io/bloomfilter-tutorial/

---------

* For all discovered (and currently live) devices run portscan
  and use discoverd ports (like 515 printer) to decide device type

* ADD ICMP PING to port scan (first thing) - to see if there

---
to start looking for whe we get bogus machine discovered

----

Use ConnectionPool
	* will make change to connectionpool so it works with connection options;
	* then create a single shared connection pool for the WTF app, and if people can use it, great, and its OK to use direct connections if you dont want pooled

--

* On GUI 
  When address is not selected sort by, add sort by address
  as secondary

  And reverse the icons for up/down - I think backwards.

  And ask Bob to make it sticky so you can see which selected
  (unless I can see how to do that easily)


* Sort by name must be case insensitive sort

---

Robert Pringle
Sat, Jul 6, 9:56 AM (2 days ago)
to Lewis

curl http://localhost:8080/devices?recurse=true&sortBy=Address,Priority&sortCompareNetwork=192.168.244.0/24

This curl is an example pulled from the docs page http://raspberrypi:8080/

- Wasn't 100% obvious all of the provided curls were equivalent/did the same thing. Could be helpful to make it more clear that either json can be passed in as a querystring or that the other fields sortBy and sortCompareNetwork can be used instead. FYI - upon rereading the docs. I now see the 2 sections both labeled queryString. This is good but wasn't clear to me that they were 2 different ways of doing the same thing.
- Would be nice to have the version of the api (as seen in the curl at the top of the page) take a comma separated list of sort fields going from Most important to least important


---

* IMPLEMENT FILTER API, so can easily
  filter by active/selected network 
  so on UNIX boxes we dont see the 172.x devices
  (and maybe see why we dont discover more about them)


* Good low hanging fruit 'probe' to see what kind of machine:
   nc 192.168.244.32 22
	SSH-2.0-OpenSSH_7.4p1 Raspbian-10+deb9u6
	^C
	(ie TCP Connect to port 22, and do a quick read, and see what comes back)


Similarly look for netbios:
	netbios-ssn
		Description: 	
		TCP NetBIOS connections are made over this port, usually with Windows machines but also with any other system running Samba (SMB). These TCP connections form "NetBIOS sessions" to support connection oriented file sharing activities.

		Related Ports: 	
		137, 138, 445
			135/tcp  open  msrpc         Microsoft Windows RPC
			139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn
			445/tcp  open  microsoft-ds?

* Maybe throw in LastHeardFromAt DATETIME for each device?
  (could be misleading cuz not trying to reach each device and may never hear from them)


* New feature - in app - keep track of how long since last question about devices etc.
  If getting pinged alot, automatically adjust 'frequency' setting and have that drive
  how aggressively we do discovery.

  OR - base it on how long since last change (since we found something new). Maybe disable
  SEARCH if we havent found anything new in a while (or do less often). Anyhow - have a 
  variable/mdoule capturing this idea of how hard we discover, and let the drive some of our 
  timing values.

* MAYBE automatically add the 6-4 CIDR for V6 networks, to show the mapped V4 range (so any bindings would show up for those devices)

* Why my 'router' not showing up as 'network infrastructure' as well.
  Maybe I did that on purpose? Should automatically list (in enum) all implied types or 
  provide API to get from a type list of all implied types so GUI can decide what to show? Or maybe
  not needed?

* On linux linux, device shows as Linux, but on windows with much more detail (version)

* fix empty device record - no name, no addresses - nothing? Not sure where that comes from
  (windows only)

*	UNIX not showing dns Servers
   cat /etc/resolve.conf (look for nameservers)
   if its got a comment about autmatically done by systemd
	systemd-resolve --status
	grep DNS Server: 


---

* Fix top level makefile so checks for if npm is installed (check-prerequesites)

* Probably need TWO classes of IDs - CURRENT (dynamically generated with GUID-GEN), and PERSISTENT IDs
  During a session, the dynamic ID wont change, but the persistent ID can change as we gain more information
  and better match.

  Generally the GUI will use the persistent IDs (though they can change during a session)

  This applies to DEVICES and NETWORKS (as these must be smartly matched/guessed). It MAY or may not apply to
  networkinterfaces. Probably a good idea there too if for no other reason than consistency

  And note that for NETWORK IDS, we want to PRIMARILY drive the MATCHING logic based on the HARDWARE ADDRESS of
  the gateway. I THINK that will in general be the best indicator.

* Add a few more helpful network idientifiers under Network object
     SSIDs
	 NetworkNames (from the adapaters on the network, can be more than one, and can be misleading; maybe call it NetworkAdapterNames)

> Redo identification of speaker based on services
  Service-ID: 'urn:upnp-org:serviceId:AudioIn'
		(lookup spec to be sure - seems a good guess)


- On unix - see why 'wifi0' is displayed as "Wired Ethernet" type? SB wireless!


- consider if its useful to incporperate https://github.com/the-tcpdump-group/libpcap/blob/master/doc/README.Win32.md to 
  scan net traffic


### Ports found open on what devices (DISCOVERY HINTS)
- at Univ Wisconsin, found 631/tcp closed ipp, which is INternetPrining, so COULD MAYBE be
  a printer???
-  

## THINGS TO ASK BOB TODO:
- ask bob how to turn on/off debug mode - nice if user settable option (dialog) 
  or at worst ?debugmode=true on url; in general - how do we handle configuraiton
- suggest to bob fix scroller so doesn't scroll heading - just the bottom alreayd
- some sort of grouping of devices
- auto-refresh list of devices in the background (really cool if could animate additions/removeals/changes)
- in about box just aggregate release notes in build - and link to from about box
- THEN - with those basics out of the way - time to talk about next-gen GUI
- filter by 'search string'
- filter by 'network'
- filter by 'present now'

- Look into using
  https://github.com/nmap/nmap/blob/master/FPEngine.cc
	(etc)
	for device type discovery


- maybe setup WTF website (or section of sophists site)


- ADD "OS" to properties assocaited with a device 
  Typically "Windows" or "Linux" (?useful?). Make it structure, with extra info
	Windows {build : n, edition : x}
	Linux { "distribution ubuntu 1404"}
	Unix { some otehr posix based unix}
	MacOS { version }
	(partly done but need more details, and collect for remote devices)

	*** DEFINE GENERIC OS-INFO object. Use in each device and in AboutInfo object - for what we are running on.
	    See how 'about' object fits with the /data-providers idea? Maybe there is where to declare at least
			this data provider?


>> ADD TO WS DATA MODEL - 'THIS DEVICE' 
flag so you can tell which device is the one querying
  (flag saying "WTFDataProvider: URL) - our 8000 url)
	(and field saying data-collected-by, but not sure where since belongs as higher level elt)
	(and returning an array here); COULD aggregatate array or could have separate API or use HTTP-header
	(ah -if we say 'data provider url and its teh same were fetching from we know same source. maybe have data provider url and GUID)
	{wtf-data-provider: {guid: xxx; url: xxx}}

maybe GET /data-providers

and data-provider guid (or set) arg allowed in fetch of devices



>>> Why sonos devices in family room (play5s) not showing up their roomname (works about 1/2 the time - works for other speakers)



>>> Add "Device ICON UrL" support and push all the way to GUI, so Bob can fetch that image and display



> Need ChangeCount mechanism - where you wait to get notified on changes 

  - use condition variable
	- when a change happens in network data (or device data) - we up a change ChangeCount and notify
	- define associated callbacks that get called on change
	- have thread driving callbacks
	- thread smart enuf to to re-call callbacks if change happens AGAIN while handling reaction


struct ChangeMonitor {
	ChangeMonitor ();	// starts monitoring
	~ChangeMonitor (); aborts and waits for callbacks if needed

	void AddCallback (Function<> cb);
	void RemoveCallback (Function<> cb);
	void NoteChanged ();

	uint64_t GetChangeCount () const;

private:
	Thread::CleanupPtr fChangeMonitorThread;
	Set<Function<>> fCallbacks;
	ConditionVariable<> fWaitOn;
	atomicuint64_t fChangeCount;
}


- Use Cache object on URL looks (GET) for SSDP data. That's probably one of the more expensive items to
  lookup, and esp if we cache the (negative cache) resulkt of failed fetch (bad url) - we can save item.
	Just write utility function to lookup (URL u) -> SSDP::DEscription  - and have it maintain the cache object.
	For a given url, probably no value in lookup more than once per hour or day? Or better - maybe use GetIFMODIFIED and save
	ETAGS in that cache structure (may need new stroika cache for this).

  - MAYBE add obj wrapper on client connection object which maintains cache? and uses ETAGS?



>>> When we recive SSDP events we get many for a given device (rooot and subdevies).
Add tracking info about time we've seen alive (and maybe if we ping it - time we know dead) ; so times KNOWN alive and times KNOWN
dead? Unsure how to handle hte in-betweens. Need some good guessing strategy or only report known info?


Need notificyuatopm/event when netowrk changes
	WHEN - must re-run over list of devices andu
	update thier list of networks.

	And maybe more

-- and separate issue as performance tweek see if I can register in stroikaroota
on network change event so I can avoid polling but poling OK to start.



GetMyDEvice needs its own thread (waiting on notification thatnetwork changed). Condition variable notify all.



	(then add a thread that periodically calls arp -a)
	(then eventually add another thread that walks all available active networks and randoming pings in that range to discover)







---
[0x00005bb4][0115.326]		<Router::Rep_::HandleMessage ((...method=GET,url=http:favicon.ico))> {
[0x00005bb4][0115.335]			Throwing exception: HTTP exception: status 405 (Method Not allowed) from 
Exception thrown at 0x00007FF959CD5549 in WhyTheFuckIsMyNetworkSoSlow-Backend.exe: Microsoft C++ exception: Stroika::Foundation::IO::Network::HTTP::ClientErrorException at memory location 0x000000000326C9E0.


WSAPI above - if we fetch soemting that we dont have issue 404 and only 405 if it was ebcause of the method!!!


-----

- current device discovery (rewriting threading)

	> backgorund thread NETWORK discovery
		Network disc module
		   Return ALL Current (even if disconencted)
		   Do logic so 'refrsh tick' wakeup called on Webservice calls?
		   Then time based scanning for new networks.
		   Say up to 60 minutes if no wakeups.
		   But otherwise typically around once ever 30 seconds (if actively getting WS calls).
	

	  > SIMILAR background thread doing Device discovery 
	     > checks all current networks
		 > similar slowdown if inactive
		 > periodcally call arp -a to get a list of candidates
		 > peridocally check candidates randomly from active networks
		 > PING them for now - but eventually also try other ways like connecting to port 22, etc.
		 > Store MUCH more data on discovered devices
		 > Load/save this to/from Database
		 > have ALL CURRENT (for network) and maybe (ALL EVER) for network APIs to do fetches

	DONT

	-- See https://www.w3.org/2009/dap/track/issues/151
	  DONT USE USN (docuemnt in stroika what it is and used for)
		For device, use UDN 
		"true device identifier that is the same for all services and embedded devices (and their respective services) under the same root UPnP device can be found in the <UDN> element of the root device description document."


	> Add suport for ARP -a for discovery

	>	NEXT - SEE IF SOMETHING SIMPLE TODO TO GET BETTER GUESSES AT DEVICE deviceType
		(maybe replace TYPE with ICON, and have a list of icons
		and with persistence UI can associate icons with devices?
		)

	>	At least someting so sonos speakers show up special? Maybe have CLASES (can be in more than one claass
		and if you support a given INTERFACE you get that class)

		Classes = "Windows device" | "Unix Device"  (and windows might be in both with WSL)
		if it shows - windows means has 'netbios and ???'
		'MacOS device'?

			Windows Media Server

			speakers

			Router (or better - Network Infrastrucutre for routers, WAPs etc)
			Maybe ROUTER AND NetworkInfrastrucutre

			(then GUI can devide how to 'show' if in multiple classes)



----

	DEFAULT PORT = config file and command-line args override and config-file-location override???
		/var/opt/WhyTheFuckIsMyNetworkSoSlow/Configuration/xxx
			StaticContentWebServerAddress : default is 0.0.0.0
			StaticContentWebServerPort
			WebServiceAddress : default is 0.0.0.0
			WebServicePort

		.../Configuration-Defaults
			Print out the default values for each configurable value, which can be used to update config file

------

http://localhost:8080/Network/97979b96-9967-6696-95cb-6495706c66c9
	ONLY prints ONE Network_Address - should print BOTH the IPv4 and IPv6 networks there.
	its attached interafce http://localhost:8080/NetworkInterface/56f0fbd0-a2ec-4e00-9c05-61e449fdbfc4
		shows several ipv6 addresses, with probably:
			fe80::b80f:7c29:847f:2322/64 being the one I should label as the network? Maybe not. Maybe its fe80:: that is the network cuz the rest SB 0's... (lower 64 bits)
			OR could be ff02::???

-----

	//// MAYBE then add APIs
	// to measure TIME BETWEEN NODES and TIME TO ADDRESS
	// AND MAYBE HAVE "MONTIORS - where we defifine set of links to montir and then can check back on historical
	values for those?"


====

		>	Document new clearer design - Networks, NetworkIntraces, Devices

		>	Document TIME aspect (param to queries saying "now" or "some temporal notion") - applies to top level queries and
			queries in a network (filtered), or even queries by ID (e.g. /Device/xxxx?time=recent-average?)


		>	Document prelim ideas on measurements, like device-2-device times (disatnce) and how they get stored

----

Under docker:

00007fdd7e147700][0002.603]                  No speed for interface lo, errno=95
[0x00007fdd7e147700][0002.603]                  ethtool_cmd_speed (&edata)=10000
[0x00007fdd7e147700][0002.607]                  <IO::Network::Socket::Bind (sockAddr=INADDR_ANY:1900 bindFlags.fReUseAddr=true)/>
[0x00007fdd7e147700][0002.607]                  <IO::Network::Socket::JoinMulticastGroup (iaddr=239.255.255.250 onInterface=INADDR_ANY)/>
[0x00007fdd7e147700][0002.608]                  <IO::Network::Socket::Bind (sockAddr=in6addr_any:1900 bindFlags.fReUseAddr=true)/>
[0x00007fdd7e147700][0002.609]                  <IO::Network::Socket::JoinMulticastGroup (iaddr=ff02::c onInterface=INADDR_ANY)> {
[0x00007fdd7e147700][0002.655]                          errno_ErrorException::Throw (19) - throwing errno_ErrorException 'No such device (errno: 19)' from /usr/lib/x86_64-linux-gnu/libasan.so.4(+0x558c0) [0x7fdd84ca88c0]; ./Builds/Debug/WhyTheFuckIsMyNetworkSoSlow/WhyTheFuckIsMyNetworkSoSlow-Backend(Stroika::Foundation::Debug::BackTrace[abi:cxx11](unsigned int)+0x22b) [0x55bb03f5f5b5]; ./Builds/Debug/WhyTheFuckIsMyNetworkSoSlow/WhyTheFuckIsMyNetworkSoSlow-Backend(Stroika::Foundation::Execution::Private_::GetBT_ws[abi:cxx11]()+0xba) [0x55bb03f73834]; ./Builds/Debug/WhyTh



>>> HANDLE BETTER when multicast crap doesn't work. Seems common enough - just log it as an erorr and set some error state, but keep running
!!!!

------------------------------------------


>>> NEXT SIMPLE FUNCTION
	>	ComputeAverageTimeToInternet()
		Run a tracert, and stop at the first public IP address. (or navigate to www.sophists.com, and www.google.com, and grab meet of two paths)

		Maybe option for two notions of internet

		>	Take that function - and somehow expopse it as REST WS API
			grab current value, and keep running in background - every 5 minutes, and report statistics

		>	This is a very primitive first draft/try - but the starting point for collecting stats


 ----
 
 >>> In discovery - look at location, and then fetch that location (at least sometimes) in xml
		http://192.168.244.1:47956/rootDesc.xml

		and that maybe info about the device - in that case it was - with <friendlyname> which we can diospaly and <deviceType>
urn:schemas-upnp-org:device:InternetGatewayDevice:1
</deviceType>


> Need to make a UUID property for devices for fronted to use to identify selected or not


>>>> Check for IF HAS PERMISSIONS TO OPEN PORT 80 and GIVE BETTER ERROR MESSAGE
